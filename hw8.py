"""Цикл while:

1. Напишите программу, которая выводит числа от 1 до 10, используя цикл while."""

# num = 1
# while num <= 10:
#     print(num)
#     num += 1



"""2. Напишите программу, которая запрашивает у пользователя число 
и выводит все степени двойки от 2^0 до 2^n, где n - введенное число."""

# n = int(input("ввод: "))
# d = 0
# while d <= n:
#     print(2**d)
#     d += 1



"""3. Напишите программу, которая запрашивает у пользователя числа до тех пор, 
пока он не введет ноль. После этого программа выводит сумму введенных чисел."""

# num = int(input("число: "))
# num_list = []
# while num != 0:
#     num_list.append(num)
#     num = int(input("число: "))
# print(num_list)
# print(sum(num_list))

"""4. Напишите программу, которая выводит наименьший положительный делитель введенного пользователем числа."""

"""5. Напишите программу, которая вычисляет сумму цифр введенного числа."""

# num = input("число: " )
# ind = 0
# result = 0
# while ind < len(num):
#     result += int(num[ind])
#     ind += 1
# print(result)

# num = input('enter your number ')
# print(sum([int(x) for x in num]))



"""Оператор break цикла while:

1. Напишите программу, которая запрашивает у пользователя числа до тех пор, 
пока он не введет отрицательное число. 
После этого программа выводит сумму всех введенных положительных чисел."""


# result = []
# while True:
#     num = int(input("число: "))
#     if num >= 0:
#         result.append(num)
#     if num < 0:
#         break
# print(sum(result))


"""2. Напишите программу, которая находит первое простое число, большее заданного пользователем числа."""


"""3. Напишите программу, которая запрашивает у пользователя числа 
и находит их произведение, пока это произведение не превысит 1000."""

# multip = 1
# nums = []
#
# while True:
#     num = int(input("число: "))
#     if num == 0:
#         print("другое бля")
#         continue
#     nums.append(num)
#     multip = nums[0]
#     if len(nums) > 1:
#         for i in nums[1:]:
#             multip *= i
#     # multip *= num  для решения с multip = 1
#     if multip >= 1000:
#         break
# print(multip)
# print(nums)


"""5. Напишите программу, которая запрашивает у пользователя числа 
и выводит на экран среднее арифметическое этих чисел. 
Программа должна завершиться, если пользователь введет отрицательное число."""

# sum_num = 0
# count = 0
# while True:
#     num = int(input("число: "))
#     if num < 0:
#         break
#     sum_num += num
#     count += 1
#
# if count > 0:
#     midl = sum_num / count
#     print(f"Среднее арифметическое: {midl}")
# else:
#     print("Вы не ввели положительных чисел.")


#
# """Оператор continue цикла while:"""
#
# """1. Напишите программу, которая выводит все числа от 1 до 20, кроме тех, которые делятся на 3."""

# my_list = [x for x in range(1, 21)]
# print(my_list)
# ind = 0
# new_list = []
# while ind < len(my_list):
#     if my_list[ind] % 3 != 0:
#         new_list.append(my_list[ind])
#     ind += 1
#     continue
# print(new_list)



# 2. Напишите программу, которая запрашивает у пользователя числа
# и выводит на экран только четные числа из введенных."""

# flag = True
# while flag:
#     a = int(input("число: "))
#     if a % 2 == 0:
#         continue
#     print(a)
#     if a % 2 != 0:
#         flag = False



""" 3. Напишите программу, которая находит сумму положительных чисел, 
# введенных пользователем, пропуская отрицательные числа."""

# my_list = []
# sum_num = 0
# while True:
#     a = int(input("число: "))
#     if a > 0:
#         my_list.append(a)
#         sum_num += a
#     elif a < 0:
#         continue
#     if sum(my_list) >= 20:
#         break
# print(my_list)
# print(sum_num)


#
# """ 4. Напишите программу, которая находит второе по величине число из введенных пользователем чисел,
# пропуская повторения."""

# my_list = []
# result = 0
# while True:
#     a = int(input("число: "))
#     if a <= 0:
#         print("нахуй")
#         break
#     elif a not in my_list:
#         my_list.append(a)
#     if len(my_list) > 1:
#         new_list = sorted(my_list)
#         result = new_list[-2]
# print(result)

#
""""# 5. Напишите программу, которая находит наименьший положительный делитель числа,
# введенного пользователем, и выводит его на экран, пропуская делители, меньшие 5."""
#
# Оператор else для циклов for и while:
#
# 1. Напишите программу, которая проверяет, является ли введенное пользователем число простым,
# и выводит соответствующее сообщение.
#
# 2. Напишите программу, которая находит факториал числа, введенного пользователем,
# и выводит его на экран. Если введено отрицательное число, программа выводит сообщение об ошибке.
#
# 3. Напишите программу, которая запрашивает у пользователя число
# и проверяет, является ли оно числом Фибоначчи. Если число не является числом Фибоначчи,
# программа выводит ближайшее к нему число Фибоначчи.
#
# 4. Напишите программу, которая запрашивает у пользователя числа до тех пор,
# пока он не введет число, меньшее 10. После этого программа выводит на экран сумму введенных чисел.

# sum_num = 0
# while True:
#     a = int(input("число: "))
#     if a > 10:
#         sum_num += a
#         continue
#     else:
#         print(sum_num)
#         break



# 5. Напишите программу, которая находит наибольший общий делитель (НОД) двух чисел
#
# , введенных пользователем. Если НОД равен 1, программа выводит сообщение о том, что числа являются взаимно простыми."""

# """Функция enumerate:
#
# 1. Напишите программу, которая выводит элементы списка и их индексы, используя функцию enumerate()."""

# my_list = [x for x in range(5, 10)]
# print(my_list)
#
# for i, value in enumerate(my_list):
#     print(f"индекс {i} значение {value}")


# """2. Напишите программу, которая запрашивает у пользователя строки
# и выводит на экран список строк вместе с их длинами, используя функцию enumerate()."""

# str_list = []
#
# while True:
#     my_str = input("ввод: ")
#     str_list.append(my_str)
#     if len(str_list) == 4:
#         break
# print(str_list)
# for i, value in enumerate(str_list):
#     print(f"строка №{i+1} её длинна {len(value)}")




# """3. Напишите программу, которая проверяет, есть ли в списке повторяющиеся элементы,
# и выводит их на экран вместе с их индексами, используя функцию enumerate()."""

# my_list = [1, 2, 2, 2, 3, 4, 4, 5, 6, 6]
#
# same = []
#
# for i in my_list:
#     if my_list.count(i) > 1 and i not in same:
#         same.append(i)
#         print(same)
# for i, val in enumerate(my_list):
#     if val in same:
#         print(f"индекс {i} значение {val}")
#
# ind = 0
# while ind < len(my_list):
#     if my_list[ind] in same and my_list.count(my_list[ind]) > 1:
#         my_list.pop(ind)
#         continue
#     else:
#         ind += 1
# print(my_list)




# """4. Напишите программу, которая принимает на вход список чисел
# и находит и выводит индексы и значения всех отрицательных чисел в списке, используя функцию enumerate()."""

# my_list = [1, -2, -5, 2, 3, -9, 12]
# neg = []
# for i, val in enumerate(my_list):
#     if val < 0:
#         neg.append(i)
#         print(neg)
#         print(f"индекс: {i} значение {val}")



# """5. Напишите программу, которая создает список слов и выводит на экран все пары слов
# и их индексы, где первое слово короче второго слова, используя функцию enumerate()."""

# wrd = ["qwe", "wert", "uyguygu", "uy", "uhuvyvycfc", "utfrdyuiuycxex"]
# ind = 0
# while ind < len(wrd):
#     for i, first_word in enumerate(wrd):
#         for j, second_word in enumerate(wrd):
#             if len(first_word) < len(second_word):
#                 ind += 1
#                 print(f"Пара слов: {first_word}, {second_word} Индексы: {i}, {j}")

